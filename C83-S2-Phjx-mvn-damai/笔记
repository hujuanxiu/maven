mybatis框架配置：
DBHelper
1. 每次操作的连接都是新的连接 ==> 连接池 
2. List<Map> 灵活 ==> List<实体对象> ==> 自己实现的功能有限
	map.get("字段 一旦写错") ==> 不报错, 返回 null
	数据映射功能 : 数据库记录 映射到 实体对象中 ==> ORM ==> 对象关系映射
3. 高级功能 ==> 数据缓存, 动态SQL(自动生成)

接口映射+自定义字段映射+原始的关系映射：
MyBatis( iBatis ): 简单易用的持久层框架, 实现 ORM 映射

是对JDBC封装

将SQL语句和程序进行分离( 解耦合 )

配置步骤
1. pom.xml引入 mybatis依赖
2. 创建 mybatis 框架配置文件  mybatis.xml (数据源, 映射文件配置)
3. 定义SQL 映射文件 xxxMapper.xml
	<mapper namespace="接口命名空间==>接口映射">
	<select id="接口方法名"><insert>...
4. 业务方法...


本章内容:
1. 接口映射
	改善sql调用方式
	
2. 自定义字段映射


3. 关系(关联)映射
	一对一关联
	订单明细=>商品
	
	
	一对多关联

	
<foreach> <set>+<if>：
回顾
1.接口映射
	1)sql映射文件的命名空间(namespace) ==> 绑定接口的完全类路径
	2)接口方法名与sql标签的id一致
	3)参数和返回值必须兼容
2.自定义字段映射
	<resultMap id="xxx"> 定义字段与属性的映射关系
		<reslut>非主键字段映射    
		<id>主键字段映射==>数据缓存
	<select resultMap=xxx>
3.一对一的关联查询
	<association>
	原始方案: 用户自己进行关联查询
	高级方案: 只要查询一次, 被关联的数据也同时被查询出来
		getProduct() ==> 自动检测到关联查询并执行


1.一对多关联查询
	订单 => 订单明细
	分类(大类) ==> 分类 (小类)  自关联
	主从表: 分类: 商品, 部门:员工
	<resultMap>
		<collection property column select fetchtype="lazy">

2.动态sql
	查询 ==> 组合条件查询 ==> java代码动态sql
	<where> + <if> + <choose>
	<foreach>
	<set> + <if> + <choose>
	
	<sql> + <include>

作业:
	1. 实现订单 : 订单明细管理查询配置( 1对多)
	2. 将分类关联查询, 请渲染到 damai 分类查询页面中
		clist.html
	3.扩展学习 <sql> + <include> 标签的使用
	
注解配置：
1.增删改查
2.关联查询
3.动态SQL
4.高级特性
	1) 自动获取自增列值==> selectKey
		大麦的核心业务逻辑: 订单管理==> 生成订单 ==> 二期 纯sql方式实现
	2) 缓存机制
		一级缓存: session 内部缓存, 在 "一个session" 所做的查询操作都会被缓存起来
			一级缓存是默认开启的
		二级缓存: 在多个session之间的数据缓存共享, 二级缓存需要在 sql 映射文件中 使用 <cache> 标签启用
			要共享会话的缓存, 会话必须提交一次
			
		缓存作用
		（1）映射语句文件中的所有select 语句将会被缓存。 
		（2）映射语句文件中的所有insert、update和delete语句会刷新缓存。 
		（3）缓存会使用Least Recently Used（LRU，最近最少使用的）算法收回。 
		（4）根据时间表（如no Flush Interval，没有刷新间隔），缓存不会以任何时间顺序来刷新。 
		（5）缓存会存储列表集合或对象（无论查询方法返回什么）的1024个引用。 
		（6）缓存会被视为read/write（可读/可写）的缓存，意味着对象检索不是共享的，而且可以安全地被调用者修改，而不干扰其他调用者或线程所做的潜在修改。
		
	
	3) 注解配置方式
	
	