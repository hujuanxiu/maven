<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- namespace是当前接口的命名空间 -->
<mapper namespace="com.yc.damai.dao.DmProductMapper">
<!-- 只要加入该标签就会开启当前接口的二级缓存 -->
   <cache
     eviction="FIFO"
     size="512"
   ></cache>



<!-- 自定义的字段映射 -->
 
   <!-- <resultMap type="com.yc.damai.po.DmProduct" id="rmdp">
       id永远定义主键映射关系，主键在mybatis有特殊的作用 》缓存
       <id column="id" property="id" />
        result永远定义非主键映射关系
       <result column="market_price" property="marketPrice" />
       <result column="shop_price" property="shopPrice" />
       <result column="is_hot" property="isHot" />
   </resultMap> -->
   
   <resultMap id="rmdo" type="com.yc.damai.po.DmOrders">
        <id column="id" property="id"/>
        <collection property="pList" ofType="com.yc.damai.po.DmProduct">
            <id column="id" property="id"/>
            <result column="market_price" property="marketPrice" />
            <result column="shop_price" property="shopPrice" />
            <result column="is_hot" property="isHot" />
        </collection>
  </resultMap>

<select id="selectByCid" resultMap="rmdp">
    select * from dm_product where cid=#{id}
  </select>
  
  <select id="selectByOrder" resultMap="rmdo">
   SELECT 
      c.*
  FROM dm_orders a
  LEFT OUTER JOIN dm_orderitem b
    ON b.oid = a.id
  LEFT OUTER JOIN dm_product c
    ON c.id = b.pid
		where a.id=#{id};
  </select >


<!-- id是该select标签的唯一标识
     resultType表示返回的结果映射到的实体类的类型     简单的自动映射
     resultMap引用自定义映射
 -->
  <!-- <select id="selectAll" resultMap="rmdp">
    select * from dm_product
  </select>
  
  <select id="selectById" resultMap="rmdp">
    select * from dm_product where id=#{id}
  </select> -->
  
  
  <select id="selectByIds" resultMap="rmdp">
     select * from dm_product where            
             <!--cid in(1,3,4)  -->
             <foreach item="id" collection="id"
             open="id in(" close=")" separator="," >
                #{id}
             </foreach>
  </select>
  
  <select id="selectByObj" resultMap="rmdp">
     select * from dm_product
     <where>
          <!-- test用于对传入的对象属性值的判断 -->
          <if test="pname!=null">
            and pname like concat('%',#{pname},'%')
          </if>
     
          <if test="pdesc!=null">
             and pdesc like concat('%',#{pdesc},'%')
          </if>
          
          <choose>
          <!-- isHot  有值(0 or 1)    isHot=值 
               isHot  无值    isHot is null
               isHot  -1    isHot is not null
               isHot  -2    exists(复杂的子查询)
          -->
              <when test="isHot==null">
                 and is_hot is null
              </when>
              <when test="isHot==-1">
                 and is_hot is not null
              </when>
              <otherwise>
                 and is_hot = #{isHot}
              </otherwise>
          </choose>
     </where>
  </select>
  
  
  
  <select id="selectByCids" resultMap="rmdp">
     select * from dm_product where            
             <!--cid in(1,3,4)  -->
             <foreach item="cid" collection="cids"
             open="cid in(" close=")" separator="," >
                #{cid}
             </foreach>
  </select>
  
  <update id="update">
     update dm_product
     <!-- set判断的是是否添加, -->
     <set>
       <if test="pname!=null">
           pname=#{pname},
       </if>
       
       <if test="marketPrice!=null">
           market_Price=#{marketPrice},
       </if>
       
       <if test="shopPrice!=null">
           shop_Price=#{shopPrice},
       </if>
       
       <if test="image!=null">
           image=#{image},
       </if>
       
       <if test="pdesc!=null">
           pdesc=#{pdesc},
       </if>
     
       <if test="isHot!=null">
           is_Hot=#{isHot},
       </if>
     
       <if test="createtime!=null">
           createtime=#{createtime},
       </if>
       
       <if test="cid!=null">
           cid=#{cid}
       </if>
     </set>
       
     where id=#{id}
  </update>
  
  <!-- 参数传入格式：#{实体对象的属性名} -->
  <insert id="insert">
    insert into dm_category values(null,#{cname},#{pid})
  </insert>
  
  <!-- <insert id="update">
  update dm_category set cname=#{cname},pid=#{pid}
  where id=#{id}
  </insert>
   -->
  
  
  <insert id="delete">
  delete from dm_category where id=#{id}
  </insert>
  
  
  <select id="selectPro" resultType="com.yc.damai.po.DmProduct">
  select * from dm_product where id=#{id}
  </select>
  
   <insert id="insertPro">
    insert into dm_product values(null,#{pname},#{marketPrice},#{shopPrice},null,#{pdesc},#{isHot},createtime=now(),#{cid})
   </insert>
  
  <insert id="updatePro">
  update dm_product set pname=#{pname},market_Price=#{marketPrice},shop_Price=#{shopPrice},pdesc=#{pdesc},is_Hot=#{isHot},createtime=now(),cid=#{cid}
  where id=#{id}
  </insert>
  
  <insert id="deletePro">
  delete from dm_product where id=#{id}
  </insert>
</mapper>